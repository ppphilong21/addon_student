

   """
    #read: đọc
   def action_read(self):
        read_record = self.env['student.student'].browse(2)
        if read_record.exists():
            print(read_record.read())
    """

    """
    #write: ghi đè
     def action_write(self):
        update_vals_field = self.env['student.student'].browse(2) #browse: Trả về một recordset các records dựa theo danh sách ids
        if update_vals_field.exists(): #kiểm tra xem có tồn tại không
            vals = {
                'name': 'New name'
            }
            update_vals_field.write(vals)
    """


    """
    #Create
         def action_create(self):
            vals = vals = {
                'name': 'long',
                'last_name': 'Check',
            }
            self.env['student.student'].create(vals)
    """


"""
    #search, and search with condition(or[()|()], and[(),()], all)
    #search_count: tìm sau trả ra kết quả là số lượng mà thỏa mãn
    def action_check_gender(self):
        for vals in self:
            student_gender_list = self.env['student.student'].search([('student_gender', '==', 'Male')])
            print('studetn gender list',student_gender_list)

    def action_confirm(self):
        for vals in self:
            student_list = self.env['student.student'].search([]) #search(all)
            print('student list', student_list)

"""

 """
 thay đổi
 @api.onchange('major_id')
    def check_change(self):
        if self.major_id:
            self.last_name = "Check OnChange"
"""

ràng buộc
@api.constrains('name', 'last_name')
    def _check_name(self):
        if self.name == self.last_name:
            print('đã truyền vô')
            raise ValidationError("Fields name and last_name must be different")

""""""

 <!--
                            <header>
                            <button name="action_check_gender" type="object" string="Check Gender"/>
                            <button name="action_confirm" type="object"  string="Confirm" />
                            <button name="action_create" type="object" string="Create"/>
                            <button name="action_write" type="object" string="Write"/>
                            <button name="action_read" type="object" string="Read"/>
                        </header>
                        -->

                        """from odoo import fields, models
.py
class CrmReport(models.TransientModel):
    _name = 'crm.student.active.report'
    student_info = fields.Many2one('res.users', string="Student Info")
    student_state = fields.Selection([('active', 'Active'), ('inactive', 'Inactive')], string='Status')
    current_date = fields.Date('Today', default=fields.Date.today)
    def print_xls_report(self, cr, uid, ids, context=None):
        data = self.read(cr, uid, ids)[0]
        return {
            'type': 'ir.actions.report.xml',
            'report_name': 'crm_student_active_report.report_crm_student_active_report.xlsx',
            'datas': data
        }

    def generate_xlsx_report(self, workbook, data, partners):
        for vals in partners:
            report_name = vals.name
            sheet = workbook.add_worksheet(report_name[:31])
            bold = workbook.add_format({
                'bold': True
            })
            sheet.write(0, 0, vals.name, bold)

"""




                        views
                        <?xml version="1.0" encoding="UTF-8"?>
<odoo>
    <data>
       <record id="view_crm_student_active_report" model="ir.ui.view">
           <field name="name">Student Active Report</field>
           <field name="model">crm.student.active.report</field>
           <field name="arch" type="xml">
               <form string="Choose your details">
                   <group>
                       <group>
                           <field name="student_state"/>
                       </group>
                        <group>
                           <field name="current_date"/>
                       </group>
                   </group>
                   <footer>
                       <button name="print_xls_report" string="Print Report" type="object"  class="oe_highlight"  />
                                or
                        <button string="Cancel" class="oe_link" special="cancel" groups="base.group_student_manager"/>
                   </footer>
               </form>
           </field>
       </record>
    </data>
</odoo>